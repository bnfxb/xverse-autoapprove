(()=>{"use strict";const e="xverse-wallet";var s,t,n,a;!function(e){e.transactionRequest="transactionRequest",e.transactionResponse="transactionResponse",e.authenticationRequest="authenticationRequest",e.authenticationResponse="authenticationResponse",e.signatureRequest="signatureRequest",e.signatureResponse="signatureResponse",e.structuredDataSignatureRequest="structuredDataSignatureRequest",e.structuredDataSignatureResponse="structuredDataSignatureResponse"}(s||(s={})),function(e){e.RequestDerivedStxAccounts="RequestDerivedStxAccounts",e.ShareInMemoryKeyToBackground="ShareInMemoryKeyToBackground",e.RequestInMemoryKeys="RequestInMemoryKeys",e.RemoveInMemoryKeys="RemoveInMemoryKeys",e.OriginatingTabClosed="OriginatingTabClosed"}(t||(t={})),function(e){e.getAddressRequest="getAddressRequest",e.getAddressResponse="getAddressResponse",e.signPsbtRequest="signPsbtRequest",e.signPsbtResponse="signPsbtResponse",e.signMessageRequest="signMessageRequest",e.signMessageResponse="signMessageResponse"}(n||(n={})),function(e){e.Home="/",e.TransactionRequest="/transaction-request",e.AuthenticationRequest="/authentication-request",e.SignatureRequest="/signature-request",e.AddressRequest="/btc-select-address-request",e.SignBtcTx="/psbt-signing-request"}(a||(a={}));const r=a;function o(e,s=[]){const t=new URLSearchParams,n=function(e){return e.sender?.url?new URL(e.sender.url).origin:e.sender?.origin}(e),a=function(e){return e.sender?.tab?.id}(e);return t.set("origin",n??""),t.set("tabId",a?.toString()??""),s.forEach((([e,s])=>t.set(e,s))),{urlParams:t,origin:n,tabId:a}}function i({id:e,tabId:s,response:t}){chrome.windows.onRemoved.addListener((n=>{if(n!==e||!s)return;const a=t;chrome.tabs.sendMessage(s,a)}))}function u({request:t,response:n}){return{source:e,method:s.signatureResponse,payload:{signatureRequest:t,signatureResponse:n}}}function d({tabId:e}){chrome.tabs.onRemoved.addListener((s=>{var n;e===s&&(n={method:t.OriginatingTabClosed,payload:{tabId:e}},chrome.runtime.sendMessage(n))}))}async function c(e,s){return console.log(`/popup.html#${e}?${s.toString()}`),function(e){const{url:s,w:t=10,h:n=10}=e;return new Promise((e=>{chrome.windows.getCurrent((async a=>{const r=a.left,o=a.top,{width:i,height:u}=a,d=Math.floor(i/2-t/2+r),c=Math.floor(u/2-n/2+o),g=await chrome.windows.create({url:s,width:1,height:1,top:0,left:0,focused:!0,type:"popup"});e(g)}))}))}({url:`/popup.html#${e}?${s.toString()}`})}chrome.runtime.onConnect.addListener((t=>{"xverse-content-script"===t.name&&t.onMessage.addListener(((t,a)=>{(function(e){return!("id"in e)})(t)&&async function(t,a){const{payload:g}=t;switch(t.method){case s.authenticationRequest:{const{urlParams:t,tabId:n}=o(a,[["authRequest",g]]),{id:u}=await c(r.AuthenticationRequest,t);i({id:u,tabId:n,response:{source:e,payload:{authenticationRequest:g,authenticationResponse:"cancel"},method:s.authenticationResponse}}),d({tabId:n});break}case s.transactionRequest:{const{urlParams:t,tabId:n}=o(a,[["request",g]]),{id:u}=await c(r.TransactionRequest,t);i({id:u,tabId:n,response:{source:e,method:s.transactionResponse,payload:{transactionRequest:g,transactionResponse:"cancel"}}}),d({tabId:n});break}case s.signatureRequest:{const{urlParams:e,tabId:s}=o(a,[["request",g],["messageType","utf8"]]),{id:t}=await c(r.SignatureRequest,e);i({id:t,tabId:s,response:u({request:g,response:"cancel"})}),d({tabId:s});break}case s.structuredDataSignatureRequest:{const{urlParams:e,tabId:s}=o(a,[["request",g],["messageType","structured"]]),{id:t}=await c(r.SignatureRequest,e);i({id:t,tabId:s,response:u({request:g,response:"cancel"})}),d({tabId:s});break}case n.getAddressRequest:{const{urlParams:s,tabId:t}=o(a,[["addressRequest",g]]),{id:u}=await c(r.AddressRequest,s);i({id:u,tabId:t,response:{source:e,payload:{addressRequest:g,addressResponse:"cancel"},method:n.getAddressResponse}}),d({tabId:t});break}case n.signPsbtRequest:{const{urlParams:s,tabId:t}=o(a,[["signPsbtRequest",g]]),{id:u}=await c(r.SignBtcTx,s);i({id:u,tabId:t,response:{source:e,payload:{signPsbtRequest:g,signPsbtResponse:"cancel"},method:n.signPsbtResponse}}),d({tabId:t});break}case n.signMessageRequest:{const{urlParams:s,tabId:t}=o(a,[["signMessageRequest",g]]),{id:u}=await c(r.SignatureRequest,s);i({id:u,tabId:t,response:{source:e,payload:{signMessageRequest:g,signMessageResponse:"cancel"},method:n.signMessageResponse}}),d({tabId:t});break}}}(t,a)}))}))})();